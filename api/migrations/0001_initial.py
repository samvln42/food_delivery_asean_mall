# Generated by Django 4.2.7 on 2025-06-19 09:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("order_id", models.AutoField(primary_key=True, serialize=False)),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("delivery_address", models.CharField(max_length=255)),
                (
                    "delivery_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "delivery_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                (
                    "current_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("preparing", "Preparing"),
                            ("ready_for_pickup", "Ready for Pickup"),
                            ("delivering", "Delivering"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "delivery_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "estimated_delivery_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("is_reviewed", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "orders",
            },
        ),
        migrations.CreateModel(
            name="OrderDetail",
            fields=[
                (
                    "order_detail_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("quantity", models.IntegerField()),
                (
                    "price_at_order",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_details",
                        to="api.order",
                    ),
                ),
            ],
            options={
                "db_table": "order_details",
            },
        ),
        migrations.CreateModel(
            name="PopularSearch",
            fields=[
                (
                    "popular_search_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("search_query", models.CharField(max_length=255, unique=True)),
                ("search_count", models.IntegerField(default=1)),
                ("last_searched", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "popular_searches",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("product_id", models.AutoField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("image_url", models.CharField(blank=True, max_length=255, null=True)),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="api.category",
                    ),
                ),
            ],
            options={
                "db_table": "products",
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                ("restaurant_id", models.AutoField(primary_key=True, serialize=False)),
                ("restaurant_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("address", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("is_special", models.BooleanField(default=False)),
                (
                    "opening_hours",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=10,
                    ),
                ),
                (
                    "qr_code_image_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bank_account_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bank_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "account_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("total_reviews", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurant",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "restaurants",
            },
        ),
        migrations.CreateModel(
            name="UserFavorite",
            fields=[
                ("favorite_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "favorite_type",
                    models.CharField(
                        choices=[("restaurant", "Restaurant"), ("product", "Product")],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.product",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.restaurant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_favorites",
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                ("search_id", models.AutoField(primary_key=True, serialize=False)),
                ("search_query", models.CharField(max_length=255)),
                (
                    "search_type",
                    models.CharField(
                        choices=[
                            ("restaurant", "Restaurant"),
                            ("product", "Product"),
                            ("category", "Category"),
                        ],
                        max_length=20,
                    ),
                ),
                ("results_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "search_history",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                ("rating_restaurant", models.IntegerField()),
                ("comment_restaurant", models.TextField(blank=True, null=True)),
                ("review_date", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="api.order",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="api.restaurant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reviews",
            },
        ),
        migrations.CreateModel(
            name="RestaurantAnalytics",
            fields=[
                (
                    "restaurant_analytics_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("date", models.DateField()),
                ("total_orders", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("completed_orders", models.IntegerField(default=0)),
                ("cancelled_orders", models.IntegerField(default=0)),
                (
                    "average_order_value",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("new_reviews", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="api.restaurant",
                    ),
                ),
            ],
            options={
                "db_table": "restaurant_analytics",
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "product_review_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("rating_product", models.IntegerField()),
                ("comment_product", models.TextField(blank=True, null=True)),
                ("review_date", models.DateTimeField(auto_now_add=True)),
                (
                    "order_detail",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_review",
                        to="api.orderdetail",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="api.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "product_reviews",
            },
        ),
        migrations.CreateModel(
            name="ProductAnalytics",
            fields=[
                (
                    "product_analytics_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("date", models.DateField()),
                ("total_ordered", models.IntegerField(default=0)),
                ("total_quantity", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="api.product",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.restaurant"
                    ),
                ),
            ],
            options={
                "db_table": "product_analytics",
            },
        ),
        migrations.AddField(
            model_name="product",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="api.restaurant",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("payment_id", models.AutoField(primary_key=True, serialize=False)),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                ("amount_paid", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("qr_code", "QR Code"),
                            ("bank_transfer", "Bank Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "proof_of_payment_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="api.order",
                    ),
                ),
            ],
            options={
                "db_table": "payments",
            },
        ),
        migrations.AddField(
            model_name="orderdetail",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.product"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="restaurant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="api.restaurant",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "notification_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("title", models.CharField(max_length=100)),
                ("message", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("order_update", "Order Update"),
                            ("payment_confirm", "Payment Confirmation"),
                            ("review_reminder", "Review Reminder"),
                            ("promotion", "Promotion"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "related_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.order",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
            },
        ),
        migrations.CreateModel(
            name="DeliveryStatusLog",
            fields=[
                ("log_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("preparing", "Preparing"),
                            ("ready_for_pickup", "Ready for Pickup"),
                            ("delivering", "Delivering"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("note", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_logs",
                        to="api.order",
                    ),
                ),
                (
                    "updated_by_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "delivery_status_log",
            },
        ),
        migrations.CreateModel(
            name="AnalyticsDaily",
            fields=[
                ("analytics_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField(unique=True)),
                ("total_orders", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("total_customers", models.IntegerField(default=0)),
                ("new_customers", models.IntegerField(default=0)),
                ("completed_orders", models.IntegerField(default=0)),
                ("cancelled_orders", models.IntegerField(default=0)),
                (
                    "average_order_value",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "analytics_daily",
                "indexes": [
                    models.Index(fields=["-date"], name="analytics_d_date_38e7cc_idx")
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="userfavorite",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("favorite_type", "restaurant"),
                        ("product__isnull", True),
                        ("restaurant__isnull", False),
                    ),
                    models.Q(
                        ("favorite_type", "product"),
                        ("product__isnull", False),
                        ("restaurant__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="favorite_type_constraint",
            ),
        ),
        migrations.AddIndex(
            model_name="searchhistory",
            index=models.Index(
                fields=["user", "-created_at"], name="search_hist_user_id_3ea0ad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="searchhistory",
            index=models.Index(
                fields=["search_query"], name="search_hist_search__f97772_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="review",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("rating_restaurant__gte", 1), ("rating_restaurant__lte", 5)
                ),
                name="rating_restaurant_range",
            ),
        ),
        migrations.AddIndex(
            model_name="restaurantanalytics",
            index=models.Index(
                fields=["restaurant", "-date"], name="restaurant__restaur_34331d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="restaurantanalytics",
            unique_together={("restaurant", "date")},
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["restaurant_name"], name="restaurants_restaur_73e63c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(
                fields=["-average_rating"], name="restaurants_average_f119a6_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="productreview",
            constraint=models.CheckConstraint(
                check=models.Q(("rating_product__gte", 1), ("rating_product__lte", 5)),
                name="rating_product_range",
            ),
        ),
        migrations.AddIndex(
            model_name="productanalytics",
            index=models.Index(
                fields=["product", "-date"], name="product_ana_product_970cef_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productanalytics",
            unique_together={("product", "date")},
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["product_name"], name="products_product_97a29d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["restaurant", "is_available"],
                name="products_restaur_a5eee8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["user", "-order_date"], name="orders_user_id_20ed0e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["restaurant", "-order_date"], name="orders_restaur_612188_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["current_status"], name="orders_current_f7f794_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "is_read"], name="notificatio_user_id_a4dd5c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["-created_at"], name="notificatio_created_8fa075_idx"
            ),
        ),
    ]
